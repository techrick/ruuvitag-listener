name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
        - aarch64-unknown-linux-musl
        - arm-unknown-linux-musleabi
        - armv7-unknown-linux-musleabihf
        - x86_64-unknown-linux-musl

    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        target: ${{ matrix.target }}
        override: true
    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --locked --target ${{ matrix.target }}
    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: test
        args: --locked --target ${{ matrix.target }}
    - name: Tarball release
      run: |
        tar czf ruuvitag-listener.tar.gz -C target/${{ matrix.target }}/release/ ruuvitag-listener
    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: ruuvitag-listener-${{ matrix.target }}.tar.gz
        path: ruuvitag-listener.tar.gz
  create_release:
    name: Create release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-22.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false
  upload_release_assets:
    name: Upload release assets
    if: startsWith(github.ref, 'refs/tags/v')
    needs: create_release
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
        - aarch64-unknown-linux-musl
        - arm-unknown-linux-musleabi
        - armv7-unknown-linux-musleabihf
        - x86_64-unknown-linux-musl
    steps:
    - id: vars
      run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}
    - uses: actions/download-artifact@v2
      with:
        name: ruuvitag-listener-${{ matrix.target }}.tar.gz
    - name: Upload release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./ruuvitag-listener.tar.gz
        asset_name: ruuvitag-listener-${{ steps.vars.outputs.version }}-${{ matrix.target }}.tar.gz
        asset_content_type: application/gzip
  rustfmt:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: rustfmt
    - name: Check formatting
      run: |
        cargo fmt --all -- --check
  clippy:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: clippy
    - name: Run clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features
